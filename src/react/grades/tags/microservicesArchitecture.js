/* eslint-disable max-len */

const microservicesArchitecture = {
  // TODO: Добавить материалы
  tag: 'Microservices architecture',
  name: 'Microservices architecture',
  text:
    'Microservices Architecture (микросервисная архитектура) — вариант сервис-ориентированной архитектуры программного обеспечения, ориентированный на взаимодействие насколько это возможно небольших, слабо связанных и легко изменяемых модулей — микросервисов, получивший распространение в середине 2010-х годов в связи с развитием практик гибкой разработки и DevOps. Если в традиционных вариантах сервис-ориентированной архитектуры модули могут быть сами по себе достаточно сложными программными системами, а взаимодействие между ними зачастую полагается на стандартизованные тяжеловесные протоколы (такие, как SOAP, XML-RPC), в микросервисной архитектуре системы выстраиваются из компонентов, выполняющих относительно элементарные функции, и взаимодействующие с использованием экономичных сетевых коммуникационных протоколов (в стиле REST с использованием, например, JSON, Protocol Buffers, Thrift). За счёт повышения гранулярности модулей архитектура нацелена на уменьшение степени зацепления и увеличение связности, что позволяет проще добавлять и изменять функции в системе в любое время.',
  links: [
    {
      url:
        'https://www.youtube.com/playlist?list=PLDmvslp_VR0xZGhJHMjy5dozCDJYZK6W-',
      name: 'Create A Microservice-based Web Application',
    },
    {
      url: 'https://www.nginx.com/blog/introduction-to-microservices/',
      name: 'Nginx Introduction to Microservices',
    },
  ],
};

export default microservicesArchitecture;
